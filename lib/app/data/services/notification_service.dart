import 'package:flutter/material.dart';
import 'package:awesome_notifications/awesome_notifications.dart';

class BeautyTipGenerator {
  static final List<String> _ukrainianBeautyTips = [
    '–í–∏–ø–∏–≤–∞–π—Ç–µ —â–æ–¥–Ω—è –Ω–µ –º–µ–Ω—à–µ 8 —Å–∫–ª—è–Ω–æ–∫ –≤–æ–¥–∏ –¥–ª—è —Å—è—é—á–æ—ó —à–∫—ñ—Ä–∏',
    '–ó–∞–≤–∂–¥–∏ –∑–Ω—ñ–º–∞–π—Ç–µ –º–∞–∫—ñ—è–∂ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º',
    '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–æ–Ω—Ü–µ–∑–∞—Ö–∏—Å–Ω–∏–π –∫—Ä–µ–º —â–æ–¥–Ω—è, –Ω–∞–≤—ñ—Ç—å —É —Ö–º–∞—Ä–Ω—É –ø–æ–≥–æ–¥—É',
    '–í–∏–¥–∞–ª—è–π—Ç–µ –º–µ—Ä—Ç–≤—ñ –∫–ª—ñ—Ç–∏–Ω–∏ —à–∫—ñ—Ä–∏ —Ä–∞–∑ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å',
    '–°–ø—ñ—Ç—å 7-9 –≥–æ–¥–∏–Ω –¥–ª—è –∑–¥–æ—Ä–æ–≤\'—è —à–∫—ñ—Ä–∏',
    '–á–∂—Ç–µ –±–∞–≥–∞—Ç–æ —Ñ—Ä—É–∫—Ç—ñ–≤ —Ç–∞ –æ–≤–æ—á—ñ–≤ –¥–ª—è –ø—Ä–∏—Ä–æ–¥–Ω—å–æ—ó –∫—Ä–∞—Å–∏',
    '–ü—ñ–¥—Ç—Ä–∏–º—É–π—Ç–µ –≤–æ–¥–Ω–∏–π –±–∞–ª–∞–Ω—Å –¥–ª—è —Å–≤—ñ–∂–æ—Å—Ç—ñ —à–∫—ñ—Ä–∏',
    '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —à–æ–≤–∫–æ–≤—É –Ω–∞–≤–æ–ª–æ—á–∫—É –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è —Ç–µ—Ä—Ç—è —à–∫—ñ—Ä–∏',
    '–†–æ–±—ñ—Ç—å –º–∞—Å–∞–∂ –æ–±–ª–∏—á—á—è –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∫—Ä–æ–≤–æ–æ–±—ñ–≥—É',
    '–ù–∞–Ω–æ—Å—å—Ç–µ –∑–≤–æ–ª–æ–∂—É—é—á–∏–π –∫—Ä–µ–º –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –¥—É—à—É',
    '–ó–∞—Ö–∏—â–∞–π—Ç–µ —à–∫—ñ—Ä—É –≤—ñ–¥ —Å–∏–Ω—å–æ–≥–æ —Å–≤—ñ—Ç–ª–∞ –µ–∫—Ä–∞–Ω—ñ–≤',
    '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–∏—Ä–æ–≤–∞—Ç–∫—É –∑ –≤—ñ—Ç–∞–º—ñ–Ω–æ–º C –¥–ª—è —Å—è–π–≤–∞ —à–∫—ñ—Ä–∏',
    '–ù–µ –∑–∞–±—É–≤–∞–π—Ç–µ –ø—Ä–æ —à–∏—é —Ç–∞ –¥–µ–∫–æ–ª—å—Ç–µ —É –¥–æ–≥–ª—è–¥—ñ –∑–∞ —à–∫—ñ—Ä–æ—é',
    '–í–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏ –±–∞–≥–∞—Ç—ñ –∞–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç–∞–º–∏',
    '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ —Ç–µ—Ö–Ω—ñ–∫–∏ –∑–Ω—è—Ç—Ç—è —Å—Ç—Ä–µ—Å—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –º–µ–¥–∏—Ç–∞—Ü—ñ—é',
  ];

  static String getRandomTip() {
    return _ukrainianBeautyTips[
        DateTime.now().millisecondsSinceEpoch % _ukrainianBeautyTips.length];
  }
}

class NotificationService {
  static Future<void> initialize() async {
    await AwesomeNotifications().initialize(
      null,
      [
        NotificationChannel(
          channelKey: 'beauty_tips',
          channelName: 'Beauty Tips',
          channelDescription: 'Daily beauty advice notifications',
          importance: NotificationImportance.High,
          defaultPrivacy: NotificationPrivacy.Public,
          defaultColor: Colors.teal,
          ledColor: Colors.teal,
          playSound: true,
          enableVibration: true,
        )
      ],
    );

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∑–≤–æ–ª—ñ–≤
    bool isAllowed = await AwesomeNotifications().isNotificationAllowed();
    if (!isAllowed) {
      await AwesomeNotifications().requestPermissionToSendNotifications();
    }
  }

  static Future<void> scheduleDailyNotifications() async {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    await AwesomeNotifications().cancelAll();

    // –©–æ–¥–µ–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    await _scheduleNotification(
      id: 1,
      hour: 9,
      minute: 0,
      title: '–†–∞–Ω–∫–æ–≤–∞ –ø–æ—Ä–∞–¥–∞ –∫—Ä–∞—Å–∏ üåû',
    );

    await _scheduleNotification(
      id: 2,
      hour: 18,
      minute: 0,
      title: '–î–µ–Ω–Ω–∞ –ø–æ—Ä–∞–¥–∞ –∫—Ä–∞—Å–∏ üåà',
    );

    await _scheduleNotification(
      id: 3,
      hour: 21,
      minute: 0,
      title: '–í–µ—á—ñ—Ä–Ω—è –ø–æ—Ä–∞–¥–∞ –∫—Ä–∞—Å–∏ ‚ú®',
    );
  }

  static Future<void> _scheduleNotification({
    required int id,
    required int hour,
    required int minute,
    required String title,
  }) async {
    await AwesomeNotifications().createNotification(
      content: NotificationContent(
        id: id,
        channelKey: 'beauty_tips',
        title: title,
        body: BeautyTipGenerator.getRandomTip(),
        notificationLayout: NotificationLayout.Default,
      ),
      schedule: NotificationCalendar(
        hour: hour,
        minute: minute,
        second: 0,
        repeats: true,
      ),
    );
  }
}
